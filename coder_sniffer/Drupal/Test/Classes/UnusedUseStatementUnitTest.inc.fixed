<?php

namespace MyNamespace\Depth;

use Thing\NotUsed;
use Thing\Fail\ActuallyUsed;
use Test\TraitTest;
use Thing\DifferentName as UsedOtherName;
use Example\MyUrlHelper;
use MyNamespace\Depth\SomeClass as CoreSomeClass;

/**
 * Bla.
 */
class Pum {
  use TraitTest;
  use Test\AnotherTrait;

  /**
   * This data type should be fixed to be fully qualified.
   *
   * @var \Some\Data\VarName
   */
  protected $x;

  /**
   * Aliased type that is otherwise unused.
   *
   * @var \Some\Data\VarName2
   */
  protected $y;

  /**
   * Description.
   */
  protected function test(ActuallyUsed $x, UsedOtherName $y) {

  }

  /**
   * Description.
   */
  protected function test2(NotUsed $x) {

  }

  /**
   * PHP is not case sensitive.
   */
  protected function test3(MyURLHelper $x) {

  }

  /**
   * Don't need to use classes in the same namespace.
   */
  protected function test4(UnusedSameNamespace $x, AnotherUnusedSameNamespace $y) {

  }

  /**
   * Renamed class from same namespace.
   */
  protected function test5(CoreSomeClass $x) {

  }

}
